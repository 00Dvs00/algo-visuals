import{r as f,j as t,L as W}from"./index-DPMaJI5j.js";import{S as q,L as S,c as $}from"./StepVisualization-BwTxH4yN.js";const Q=()=>{const[A,O]=f.useState("1,2,3,4,3,2,1"),[G,H]=f.useState(null),[p,k]=f.useState(0),[N,_]=f.useState([]),[I,L]=f.useState(!1),[z,C]=f.useState(!0),E=o=>{const r=[];let c=0,b=[],M=new Set,j=o;for(;j;)b.push(j.val),j=j.next;const x=b.length;let R=!0;if(x<=1)return r.push({id:c++,description:"Initial linked list. List has 0 or 1 element, so it's a palindrome.",list:o,pointers:{},highlightNodes:[],code:`boolean isPalindrome(ListNode head) {
    if (head == null || head.next == null) 
        return true;`,reccurse:!1,finalResult:!0}),C(!0),r;r.push({id:c++,description:"Initial linked list - checking if it's a palindrome",list:o,pointers:{},highlightNodes:[],code:`boolean isPalindrome(ListNode head) {
    if (head == null || head.next == null) 
        return true;`,reccurse:!1}),r.push({id:c++,description:"Initialize slow and fast pointers to find the middle",list:o,pointers:{"slow , fast":0},highlightNodes:[0],code:`ListNode slow = head;
ListNode fast = head;`,reccurse:!1});let h=0,v=0;for(;v<x&&v+1<x;)h++,v+=2,r.push({id:c++,description:`Moving pointers: slow at index ${h}, fast at index ${Math.min(v,x-1)}`,list:o,pointers:{slow:h,fast:Math.min(v,x-1)},highlightNodes:[h,Math.min(v,x-1)],code:`while (fast != null && fast.next != null) {
    slow = slow.next;
    fast = fast.next.next;
}`,reccurse:!1});r.push({id:c++,description:`Middle identified. Node at index ${h} helps determine the split. Now reversing the second half.`,list:o,pointers:{middle:h},highlightNodes:[h],code:`// Middle found (slow pointer is at middle or start of second half).
// Now reverse the second half of the list.
ListNode secondHalfStartNode = (fast == null) ? slow : slow.next;
ListNode secondHalfReversed = reverseLinkedList(secondHalfStartNode);`,reccurse:!1});let y,d;x%2===0?(y=b.slice(0,h),d=b.slice(h)):(y=b.slice(0,h),d=b.slice(h+1));let m=new Array(d.length).fill(!0);function w({type:u,i:e,currentVal:s,nextVal:i,prevVal:l}){const n={id:c++,list:o,list2:$(d),pointers:{},pointers2:{},highlightNodes:[],highlightNodes2:[],reccurse:!0,iteration:e+1,reversalPhase:u},g=new Array(d.length).fill("normal");switch(M.forEach(D=>{D<g.length&&(g[D]="reverse")}),u){case"Initialize":Object.assign(n,{description:"Initialize Pointers : Prev = null , Current = head, next = head.",pointers2:{prev:null,"current, next":e},highlightNodes2:[e],showArrow:[...m],arrowDirection:g,code:"next = current.next;",code2:`// Storing: next = ${i||"null"}`});break;case"store_next":Object.assign(n,{description:`Iteration ${e+1}a: Store next pointer before breaking the link.`,pointers2:{prev:e>0?e-1:null,current:e,next:i?e+1:null,storing:!0},highlightNodes2:[e,...i?[e+1]:[]],showArrow:[...m],arrowDirection:g,code:"next = current.next;",code2:`// Storing: next = ${i||"null"}`});break;case"break_link":m[e]=!1,Object.assign(n,{description:`Iteration ${e+1}b: Break the current link (remove arrow from ${s}).`,pointers2:{prev:e>0?e-1:null,current:e,next:i?e+1:null,breaking:!0},highlightNodes2:[e],showArrow:[...m],arrowDirection:g,code:"// About to break: current.next",code2:`// Breaking link from ${s} to ${i||"null"}`});break;case"reverse_link":M.add(e),g[e]="reverse",m[e-1]=!0,Object.assign(n,{description:`Iteration ${e+1}b: Reverse link.`,pointers2:{prev:e>0?e-1:null,current:e,next:i?e+1:null,reversing:!0},highlightNodes2:[e,...l?[e-1]:[]],showArrow:[...m],arrowDirection:g,code:"current.next = prev;",code2:`// Reversing: ${s}.next = ${l||"null"}`});break;case"move_prev":Object.assign(n,{description:`Iteration ${e+1}c: Move prev pointer forward.`,pointers2:{prev:e,current:e,next:i?e+1:null,movingPrev:!0},highlightNodes2:[e],showArrow:[...m],arrowDirection:g,code:"prev = current;",code2:`// prev = ${s}`});break;case"move_current":Object.assign(n,{description:`Iteration ${e+1}d: Move current pointer forward.`,pointers2:{prev:e,current:i?e+1:null,next:i?e+1:null,movingCurrent:!0},showArrow:[...m],highlightNodes2:i?[e+1]:[],arrowDirection:g});break}return n}function V(u,e,s,i){const l=e===s;return{id:c++,description:`Compare node ${u+1}: ${e} ${l?"==":"!="} ${s}`,list:o,list2:i,pointers:{first:u},pointers2:{second:u},highlightNodes:[u],highlightNodes2:[u],code:`if (${e} != ${s}) return false;`,code2:`// Comparison ${u+1}: ${e} ${l?"MATCH":"MISMATCH"}`,reccurse:!0,comparisonResult:l,comparisonIndex:u+1}}if(d.length>0){r.push(w({type:"Initialize",i:0,currentVal:d[0],nextVal:null,prevVal:null}));for(let s=0;s<d.length;s++){const i=d[s],l=d[s+1]||null,n=d[s-1]||null;r.push(w({type:"store_next",i:s,currentVal:i,nextVal:l,prevVal:n})),r.push(w({type:"break_link",i:s,currentVal:i,nextVal:l,prevVal:n})),r.push(w({type:"reverse_link",i:s,currentVal:i,nextVal:l,prevVal:n})),r.push(w({type:"move_prev",i:s,currentVal:i,nextVal:l,prevVal:n})),r.push(w({type:"move_current",i:s,currentVal:i,nextVal:l,prevVal:n}))}const u=$([...d].reverse()),e=[...d].reverse();for(let s=0;s<y.length;s++){const i=y[s],l=e[s],n=V(s,i,l,u);if(r.push(n),!n.comparisonResult)break}}return r.push({id:c++,description:`Algorithm complete! 
                 Final result: List is PALINDROME
                 All comparisons matched!`,list:o,pointers:{},highlightNodes:[],reccurse:!1,finalResult:R}),C(R),r},P=()=>{const o=A.split(",").map(c=>parseInt(c.trim())).filter(c=>!isNaN(c)),r=$(o);H(r),_(E(r)),k(0),L(!1)},B=()=>{p<N.length-1&&k(p+1)},F=()=>{p>0&&k(p-1)},T=()=>{L(!0);const o=setInterval(()=>{k(r=>r>=N.length-1?(L(!1),clearInterval(o),r):r+1)},2e3)};f.useEffect(()=>{P()},[]);const a=N[p]||{};return t.jsx("div",{className:"realtive min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-6",children:t.jsxs("div",{className:"max-w-7xl mx-auto",children:[t.jsxs("div",{className:"text-center mb-8",children:[t.jsx(W,{to:"/",className:"absolute top-4 left-4 bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded transition duration-300",children:"← Back to Algorithms"}),t.jsx("h1",{className:"text-4xl font-bold text-gray-800 mb-2",children:"Palindrome Linked List Visualizer"}),t.jsx("p",{className:"text-lg text-gray-600",children:"Watch how the algorithm determines if a linked list is a palindrome"})]}),t.jsx("div",{className:"bg-white rounded-xl shadow-lg p-6 mb-6",children:t.jsxs("div",{className:"flex flex-wrap items-center gap-4 justify-center",children:[t.jsxs("div",{className:"flex items-center gap-2",children:[t.jsx("label",{className:"text-sm font-medium text-gray-700",children:"Input Values:"}),t.jsx("input",{type:"text",value:A,onChange:o=>O(o.target.value),placeholder:"Enter comma-separated values",className:"px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all duration-200 w-64"})]}),t.jsxs("div",{className:"flex gap-2",children:[t.jsx("button",{onClick:P,className:"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200 font-medium",children:"Create List"}),t.jsx("button",{onClick:F,disabled:p===0,className:"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors duration-200 font-medium",children:"Previous"}),t.jsx("button",{onClick:B,disabled:p>=N.length-1,className:"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors duration-200 font-medium",children:"Next"}),t.jsx("button",{onClick:T,disabled:I,className:"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-green-300 disabled:cursor-not-allowed transition-colors duration-200 font-medium",children:I?"Playing...":"Play Animation"})]})]})}),t.jsx(q,{currentStep:p,steps:N,currentStepData:a,isPalindrome:z}),t.jsxs("div",{className:"bg-white rounded-xl shadow-lg p-6 mb-6",children:[t.jsx("h4",{className:"text-xl font-semibold text-gray-800 mb-4",children:"Linked List Visualization"}),a.reccurse?t.jsxs("div",{className:"grid md:grid-cols-2 gap-6",children:[t.jsxs("div",{className:"bg-blue-50 rounded-lg p-4",children:[t.jsx("h5",{className:"text-lg font-medium text-blue-800 mb-3",children:"Original List"}),t.jsx(S,{list:a.list,highlightNodes:a.highlightNodes,pointers:a.pointers})]}),t.jsxs("div",{className:"bg-green-50 rounded-lg p-4",children:[t.jsx("h5",{className:"text-lg font-medium text-green-800 mb-3",children:"Reversing Second Half"}),t.jsx(S,{list:a.list2,highlightNodes:a.highlightNodes2,pointers:a.pointers2,arrowDirection:a.arrowDirection,showArrow:a.showArrow})]})]}):t.jsx("div",{className:"bg-gray-50 rounded-lg p-4",children:t.jsx(S,{list:a.list,highlightNodes:a.highlightNodes,pointers:a.pointers})})]})]})})};export{Q as default};
